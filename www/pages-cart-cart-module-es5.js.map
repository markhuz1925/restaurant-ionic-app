{"version":3,"sources":["webpack:///src/app/pages/cart/cart.page.html","webpack:///src/app/pages/cart/cart-routing.module.ts","webpack:///src/app/pages/cart/cart.module.ts","webpack:///src/app/pages/cart/cart.page.scss","webpack:///src/app/pages/cart/cart.page.ts"],"names":["routes","path","component","CartPageRoutingModule","imports","forChild","exports","CartPageModule","declarations","CartPage","_userService","items","getCartItems","item","index","indexOf","splice","getTotalAmount","i","qty","undefined","removeItem","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,qBAAqB;AAAA;AAAA,KAAlC;;AAAaA,yBAAqB,6DAJjC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIiC,GAArBH,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAaI,cAAc;AAAA;AAAA,KAA3B;;AAAaA,kBAAc,6DAT1B,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,0EAJO,CADD;AAORI,kBAAY,EAAE,CAAC,mDAAD;AAPN,KAAT,CAS0B,GAAdD,cAAc,CAAd;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQf,QAAaE,QAAQ;AAInB,wBAAoBC,YAApB,EAA+C;AAAA;;AAA3B,aAAAA,YAAA,GAAAA,YAAA;AAFpB,aAAAC,KAAA,GAAQ,EAAR;AAEkD;;AAJ/B;AAAA;AAAA,mCAMR;AACT,eAAKA,KAAL,GAAa,KAAKD,YAAL,CAAkBE,YAAlB,EAAb;AACD;AARkB;AAAA;AAAA,mCAURC,IAVQ,EAUF;AACf,cAAIC,KAAK,GAAG,KAAKH,KAAL,CAAWI,OAAX,CAAmBF,IAAnB,CAAZ;AACA,eAAKF,KAAL,CAAWK,MAAX,CAAkBF,KAAlB,EAAyB,CAAzB;AACD;AAbkB;AAAA;AAAA,+CAeI;AACrB,iBAAO,KAAKJ,YAAL,CAAkBO,cAAlB,EAAP;AACD;AAjBkB;AAAA;AAAA,oCAmBPC,CAnBO,EAmBN;AACX,cAAGA,CAAC,CAACC,GAAF,KAAUC,SAAb,EAAwB;AACtBF,aAAC,CAACC,GAAF,GAAQ,CAAR;AACD,WAFD,MAGK;AACHD,aAAC,CAACC,GAAF;AACD;AACF;AA1BkB;AAAA;AAAA,oCA4BPD,CA5BO,EA4BN;AACX,cAAGA,CAAC,CAACC,GAAF,KAAUC,SAAb,EAAwB;AACtBF,aAAC,CAACC,GAAF,GAAQ,CAAR;AACD,WAFD,MAGK;AACH,gBAAGD,CAAC,CAACC,GAAF,IAAS,CAAZ,EAAe;AACb,mBAAKE,UAAL,CAAgBH,CAAhB;AACD,aAFD,MAGK;AACHA,eAAC,CAACC,GAAF;AACD;AACF;AACF;AAxCkB;;AAAA;AAAA,OAArB;;;;cAIoC;;;;AAJvBV,YAAQ,6DALpB,gEAAU;AACTa,cAAQ,EAAE,UADD;AAETC,cAAQ,EAAR;AAAA;AAAA,8FAFS;;;;AAAA,KAAV,CAKoB,GAARd,QAAQ,CAAR","file":"pages-cart-cart-module-es5.js","sourcesContent":["export default \"<ion-header translucent=\\\"false\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Cart\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-grid fixed class=\\\"ion-no-padding\\\">\\n    <ion-row>\\n      <ion-col class=\\\"ion-no-padding\\\">\\n\\n        <ion-card *ngFor=\\\"let i of items\\\" class=\\\"ion-no-padding\\\">\\n\\n          <ion-card-header class=\\\"ion-no-padding\\\">\\n            <ion-item lines=\\\"none\\\" class=\\\"ion-no-padding\\\">\\n              <ion-button (click)=\\\"removeItem(i)\\\" color=\\\"medium\\\" fill=\\\"clear\\\" slot=\\\"end\\\" class=\\\"ion-no-padding\\\">\\n                <ion-icon name=\\\"close-circle-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n              <div class=\\\"ion-text-nowrap ion-margin-start\\\">\\n                <h2>{{ i.name }}</h2>\\n              </div>\\n            </ion-item>\\n          </ion-card-header>\\n\\n          <ion-card-content>\\n            <ion-text>\\n              <h3>{{ i.description }}</h3>\\n            </ion-text>\\n          </ion-card-content>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-note color=\\\"default\\\" slot=\\\"start\\\">Amount:</ion-note>\\n            <ion-note color=\\\"default\\\" slot=\\\"end\\\">{{ (i.price | currency: '₱')  }}</ion-note>\\n          </ion-item>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-note color=\\\"default\\\" slot=\\\"start\\\">Qty:</ion-note>\\n            <ion-note color=\\\"default\\\" slot=\\\"end\\\">{{ i.qty }}</ion-note>\\n          </ion-item>\\n          <ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t\\t\\t<ion-button fill=\\\"clear\\\" slot=\\\"start\\\" (click)=\\\"decreaseQty(i)\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ion-icon slot=\\\"icon-only\\\" name=\\\"remove-circle-outline\\\"></ion-icon>\\n\\t\\t\\t\\t\\t\\t</ion-button>\\n\\t\\t\\t\\t\\t\\t<ion-note slot=\\\"end\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ion-label slot=\\\"start\\\">{{i.qty}}</ion-label>\\n\\t\\t\\t\\t\\t\\t</ion-note>\\n\\t\\t\\t\\t\\t\\t<ion-button fill=\\\"clear\\\" slot=\\\"end\\\" (click)=\\\"increaseQty(i)\\\">\\n\\t\\t\\t\\t\\t\\t\\t<ion-icon slot=\\\"icon-only\\\" name=\\\"add-circle-outline\\\"></ion-icon>\\n\\t\\t\\t\\t\\t\\t</ion-button>\\n          </ion-item>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-text slot=\\\"start\\\">\\n              Subtotal\\n            </ion-text>\\n            <ion-text slot=\\\"end\\\">\\n              {{ (i.price * (i.qty > 10? 10: i.qty)) | currency: '₱' }}\\n            </ion-text>\\n          </ion-item>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-text slot=\\\"start\\\">Total</ion-text>\\n      <ion-text slot=\\\"end\\\" color=\\\"primary\\\">{{ getTotalAmountInCart() | currency: '₱' }}</ion-text>\\n    </ion-item>\\n\\n    <ion-button color=\\\"primary\\\" fill=\\\"solid\\\" size=\\\"large\\\" expand=\\\"block\\\">\\n      Checkout\\n    </ion-button>\\n\\n  </ion-toolbar>\\n</ion-footer>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CartPage } from './cart.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CartPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CartPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CartPageRoutingModule } from './cart-routing.module';\n\nimport { CartPage } from './cart.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CartPageRoutingModule\n  ],\n  declarations: [CartPage]\n})\nexport class CartPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhcnQvY2FydC5wYWdlLnNjc3MifQ== */\";","import { UserService } from './../../service/user.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.page.html',\n  styleUrls: ['./cart.page.scss'],\n})\nexport class CartPage implements OnInit {\n\n  items = [];\n\n  constructor(private _userService: UserService) { }\n\n  ngOnInit() {\n    this.items = this._userService.getCartItems();\n  }\n\n  removeItem(item) {\n    let index = this.items.indexOf(item);\n    this.items.splice(index, 1);\n  }\n\n  getTotalAmountInCart() {\n    return this._userService.getTotalAmount();\n  }\n\n  increaseQty(i): void {\n    if(i.qty === undefined) {\n      i.qty = 1;\n    }\n    else {\n      i.qty++;\n    }\n  }\n\n  decreaseQty(i): void {\n    if(i.qty === undefined) {\n      i.qty = 0;\n    }\n    else {\n      if(i.qty <= 1) {\n        this.removeItem(i);\n      }\n      else {\n        i.qty--;\n      }      \n    }\n  }\n\n}\n"]}